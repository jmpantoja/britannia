security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            entity:
                # the class of the entity that represents users
                class: 'Britannia\Domain\Entity\Staff\StaffMember'
                # the property to query by - e.g. username, email, etc
                property: 'username'

    role_hierarchy:
        ROLE_ADMIN: [ROLE_CMC, ROLE_EC, ROLE_CMU, ROLE_EU, ROLE_PAGOS, ROLE_DOCU_ADMIN, ROLE_TEACHER_FOLDER, ROLE_STAFF_MEMBER ]


    encoders:
        Britannia\Domain\Entity\Staff\StaffMember:
            algorithm: md5
            encode_as_base64: false
            iterations: 0

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        main:
            anonymous: true
            guard:
                authenticators: [Britannia\Infraestructure\Symfony\Security\FormLoginAuthenticator]
            logout:
                path: app_logout
                
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /                
        
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/admin, roles: ROLE_STAFF_MEMBER }
    - { path: ^/api , roles: ROLE_STAFF_MEMBER }
